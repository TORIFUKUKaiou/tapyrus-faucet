name: Deploy to Amazon ECS

on: [push]

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: DockerHub sign in
        run: |
          docker login --username rantan39 --password ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build, tag, and push image to DockerHub
        id: build-app-image
        env:
          DOCKER_HUB_APP_REPOSITORY: rantan39/tapyrus-faucet-app
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t dev-image .
          docker build -f Dockerfile-production -t $DOCKER_HUB_APP_REPOSITORY:$IMAGE_TAG .
          docker tag $DOCKER_HUB_APP_REPOSITORY:$IMAGE_TAG $DOCKER_HUB_APP_REPOSITORY:master
          docker push $DOCKER_HUB_APP_REPOSITORY:$IMAGE_TAG
          docker push $DOCKER_HUB_APP_REPOSITORY:master
          echo "::set-output name=image::$DOCKER_HUB_APP_REPOSITORY:$IMAGE_TAG"

      - name: Build, tag, and push image to DockerHub
        id: build-nginx-image
        env:
          DOCKER_HUB_NGINX_REPOSITORY: rantan39/tapyrus-faucet-nginx
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -f Dockerfile-nginx -t $DOCKER_HUB_NGINX_REPOSITORY:$IMAGE_TAG .
          docker tag $DOCKER_HUB_NGINX_REPOSITORY:$IMAGE_TAG $DOCKER_HUB_NGINX_REPOSITORY:master
          docker push $DOCKER_HUB_NGINX_REPOSITORY:$IMAGE_TAG
          docker push $DOCKER_HUB_NGINX_REPOSITORY:master
          echo "::set-output name=image::$DOCKER_HUB_NGINX_REPOSITORY:$IMAGE_TAG"

      - name: Fill in the new app image ID in the Amazon ECS task definition
        id: render-task-def-app
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-def.json
          container-name: tapyrus-faucet-app
          image: ${{ steps.build-app-image.outputs.image }}

      - name: Fill in the new nginx image ID in the Amazon ECS task definition
        id: render-task-def-nginx
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ steps.render-task-def-app.outputs.task-definition }}
          container-name: tapyrus-faucet-nginx
          image: ${{ steps.build-nginx-image.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.render-task-def-nginx.outputs.task-definition }}
          service: tapyrus-faucet
          cluster: tapyrus
          wait-for-service-stability: true